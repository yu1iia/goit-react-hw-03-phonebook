{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","formSubmitHandler","preventDefault","newContact","id","shortid","generate","props","submitHandler","reset","onSubmit","this","className","s","form_label","form_input","type","onChange","pattern","title","required","addButton","Component","PropTypes","func","isRequired","ContactList","addedContacts","onDeleteContact","users","map","userInfo","removeContactButton","onClick","prototype","Filter","filter_label","filter_input","string","App","contacts","filter","find","contact","alert","prevState","handleFilterContacts","handleDeleteContact","currentId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","normalizeFilter","toLocaleLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e82081e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__3QAmX\",\"filter_label\":\"Filter_filter_label__2I0f_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"ContactForm_form_input__3NfwP\",\"form_label\":\"ContactForm_form_label__1MBoD\",\"addButton\":\"ContactForm_addButton__1Z29g\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//styles\r\nimport s from './ContactForm.module.css';\r\n\r\n//npm\r\nimport shortid from 'shortid';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  static propTypes = {\r\n    submitHandler: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formSubmitHandler = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const newContact = {\r\n      name: name,\r\n      number: number,\r\n      id: shortid.generate(),\r\n    };\r\n    this.props.submitHandler(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmitHandler}>\r\n        <label className={s.form_label}>\r\n          Name\r\n          <input\r\n            className={s.form_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.form_label}>\r\n          Number\r\n          <input\r\n            className={s.form_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.addButton}>Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line react/no-typos\r\nContactForm.PropTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//styles\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ addedContacts, onDeleteContact }) => (\r\n  <ul className={s.users}>\r\n    {addedContacts.map(({ name, id, number }) => (\r\n      <li className={s.userInfo} key={id}>\r\n        <p>\r\n          {name} : {number}\r\n        </p>\r\n        <button\r\n          className={s.removeContactButton}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.prototype = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//styles\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <label className={s.filter_label}>\r\n    Filter\r\n    <input\r\n      className={s.filter_input}\r\n      value={value}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\n\r\n//components\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\n\r\n//styles\r\nimport './App.css';\r\n\r\n//npm\r\n// import shortid from 'shortid';\r\n// import classNames from 'classnames';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { Formik, Form, Field } from 'formik';\r\n// import * as yup from 'yup';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  //Local Storage\r\n\r\n  componentDidMount() {\r\n    const addedContacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(addedContacts);\r\n\r\n    if (addedContacts !== null) {\r\n      this.setState({\r\n        contacts: parsedContacts,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      console.log('Обновилось поле contacts, записываю contact в хранилище');\r\n      if (prevState.contacts !== this.state.contacts) {\r\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n      }\r\n    }\r\n  }\r\n\r\n  submitHandler = newContact => {\r\n    const { contacts } = this.state;\r\n    const foundMatch = contacts.find(\r\n      contact => contact.name === newContact.name,\r\n    );\r\n    if (foundMatch) {\r\n      alert(`${newContact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n    this.setState(prevState => ({\r\n      contacts: [newContact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  handleFilterContacts = ({ currentTarget }) => {\r\n    this.setState({ filter: currentTarget.value });\r\n  };\r\n\r\n  handleDeleteContact = currentId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== currentId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const normalizeFilter = this.state.filter.toLocaleLowerCase();\r\n    const addedContacts = contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizeFilter),\r\n    );\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"phonebookHeader\">Phonebook</h1>\r\n        <ContactForm\r\n          submitHandler={this.submitHandler}\r\n          // onSubmit={this.formSubmitHandler}\r\n          // contactName={name}\r\n          // contactNumber={number}\r\n          // onChangeName={this.handleNameChange}\r\n          // onChangeNumber={this.handleNumberChange}\r\n        />\r\n\r\n        <h2 className=\"contactsHeader\">Contacts</h2>\r\n        <Filter value={filter} onChange={this.handleFilterContacts} />\r\n        <ContactList\r\n          addedContacts={addedContacts}\r\n          onDeleteContact={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"ContactList_users__2Tskr\",\"removeContactButton\":\"ContactList_removeContactButton__2OagN\",\"userInfo\":\"ContactList_userInfo__27mXT\"};"],"sourceRoot":""}